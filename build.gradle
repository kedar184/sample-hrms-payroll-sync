plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.kedar'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = [
        '--release', '21'
    ]
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', '2023.0.0')
    set('googleCloudVersion', '5.0.0')  // Latest version compatible with Spring Boot 3.2
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.retry:spring-retry'
    
    // GCP Dependencies
    implementation platform("com.google.cloud:spring-cloud-gcp-dependencies:${googleCloudVersion}")
    implementation 'com.google.cloud:spring-cloud-gcp-starter'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-secretmanager'
    implementation 'com.google.cloud:google-cloud-secretmanager'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-pubsub'
    
    // OpenAPI documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Observability
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    
    // Resilience4j
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
    implementation 'io.github.resilience4j:resilience4j-retry'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker'
    
    // Or alternatively, use the newer libraries:
    // implementation platform('com.google.cloud:libraries-bom:27.0.0')
    // implementation 'com.google.cloud:google-cloud-pubsub'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${googleCloudVersion}"
    }
}

test {
    enabled = false  // Temporarily disable tests
    useJUnitPlatform()
}

bootBuildImage {
    builder = "paketobuildpacks/builder:base"
    environment = [
        "BP_JVM_VERSION": "21.*"
    ]
    
    imageName = "${project.name}"
    tags = ["latest"]
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.withType(JavaCompile) {
    options.sourcepath = files(sourceSets.main.java.srcDirs)
} 