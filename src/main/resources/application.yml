spring:
  application:
    name: hrms-payroll-sync
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  cloud:
    gcp:
      project-id: ${PROJECT_ID:cloud-exps}
      credentials:
        scopes:
          - https://www.googleapis.com/auth/cloud-platform
      secretmanager:
        enabled: true
      pubsub:
        enabled: false  # Disabled by default, enabled in cloud profile

hr:
  api:
    baseUrl: ${HR_API_URL}
    mock:
      enabled: ${HR_MOCK_ENABLED:false}

datacom:
  api:
    baseUrl: ${DATACOM_API_URL}
    mock:
      enabled: ${DATACOM_MOCK_ENABLED:false}

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{recordId},%X{recordType},%X{eventType}] - %msg%n"
  level:
    io.abc.hrms: INFO
    org.springframework: INFO
    io.abc.hrms.payroll: INFO
    io.abc.hrms.payroll.client: DEBUG  # Enable payload logging for clients 

resilience4j:
  retry:
    instances:
      datacomApi:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException
      hrApi:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException
  circuitbreaker:
    instances:
      datacomApi:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
      hrApi:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 30s 

notification:
  pubsub:
    enabled: false
    topic: business-notifications 